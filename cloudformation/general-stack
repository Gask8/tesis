AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC and DB"

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: TYPE
          Value: VPC

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: TYPE
          Value: VPC

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: TYPE
          Value: VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: TYPE
          Value: VPC

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: TYPE
          Value: VPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.4.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: TYPE
          Value: VPC

  # NAT Gateway
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: TYPE
          Value: VPC

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: TYPE
          Value: VPC

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: TYPE
          Value: VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: TYPE
          Value: VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # S3 VPC Endpoint
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:*"
            Resource:
              - "*"
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC
      Tags:
        - Key: TYPE
          Value: VPC

  # # DB Subnet Group
  # DBSubnetGroup:
  #   Type: AWS::RDS::DBSubnetGroup
  #   DeletionPolicy: Retain
  #   Properties:
  #     DBSubnetGroupDescription: Subnet group for RDS
  #     SubnetIds:
  #       - Fn::ImportValue: !Sub ${VPCStackName}::PrivateSubnet1
  #       - Fn::ImportValue: !Sub ${VPCStackName}::PrivateSubnet2
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${Environment}-DB-Subnet-Group
  #       - Key: Environment
  #         Value: !Ref Environment
  #       - Key: Group
  #         Value: RDS

  # # Security Group for DB Access
  # SGDBAccess:
  #   Type: AWS::EC2::SecurityGroup
  #   DeletionPolicy: Retain
  #   Properties:
  #     GroupDescription: Security group for DB access
  #     VpcId:
  #       Fn::ImportValue: !Sub ${VPCStackName}::VpcId
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${Environment}-SG-DB-Access
  #       - Key: Environment
  #         Value: !Ref Environment
  #       - Key: Group
  #         Value: RDS

  # # Security Group for RDS
  # SGDB:
  #   Type: AWS::EC2::SecurityGroup
  #   DeletionPolicy: Retain
  #   Properties:
  #     GroupDescription: Security group for RDS
  #     VpcId:
  #       Fn::ImportValue: !Sub ${VPCStackName}::VpcId
  #     SecurityGroupIngress:
  #       - IpProtocol: tcp
  #         FromPort: 5432
  #         ToPort: 5432
  #         SourceSecurityGroupId: !Ref SGDBAccess
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${Environment}-SG-DB
  #       - Key: Environment
  #         Value: !Ref Environment
  #       - Key: Group
  #         Value: RDS

  # # RDS Parameter Group
  # DBParameterGroup:
  #   Type: AWS::RDS::DBParameterGroup
  #   DeletionPolicy: Retain
  #   Properties:
  #     Family: postgres16
  #     Description: Custom parameter group for PostgreSQL
  #     Parameters:
  #       shared_preload_libraries: 'pg_stat_statements'
  #       pg_stat_statements.track: 'all'
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${Environment}-DB-Parameter-Group
  #       - Key: Environment
  #         Value: !Ref Environment
  #       - Key: Group
  #         Value: RDS

  # RDSInstance:
  #   Type: AWS::RDS::DBInstance
  #   DeletionPolicy: Retain
  #   UpdateReplacePolicy: Retain
  #   Properties:
  #     DBSnapshotIdentifier: !If
  #       - UseSnapshot
  #       - !Ref DBSnapshotArn
  #       - !Ref AWS::NoValue
  #     DBName: !If
  #       - UseSnapshot
  #       - !Ref AWS::NoValue
  #       - !Ref DBName
  #     MasterUsername: !If
  #       - UseSnapshot
  #       - !Ref AWS::NoValue
  #       - !Ref DBUsername
  #     MasterUserPassword: !If
  #       - UseSnapshot
  #       - !Ref AWS::NoValue
  #       - !Ref DBPassword
  #     Engine: postgres
  #     EngineVersion: '16.3'
  #     DBInstanceClass: !Ref DBInstanceClass
  #     AllocatedStorage: '20'
  #     MaxAllocatedStorage: '100'
  #     StorageType: gp3
  #     MultiAZ: !If [ShouldCreateReplica, true, false]
  #     PubliclyAccessible: false
  #     DBSubnetGroupName: !Ref DBSubnetGroup
  #     VPCSecurityGroups:
  #       - !Ref SGDB
  #     DBParameterGroupName: !Ref DBParameterGroup
  #     BackupRetentionPeriod: !If [ShouldCreateReplica, 7, 1]
  #     StorageEncrypted: true
  #     KmsKeyId: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/rds"
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${Environment}-PostgreSQL-Primary
  #       - Key: Environment
  #         Value: !Ref Environment
  #       - Key: Group
  #         Value: RDS

Outputs:
  #VPC
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}::VpcId"
  PublicSubnet1:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}::PublicSubnet1"
  PublicSubnet2:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}::PublicSubnet2"
  PrivateSubnet1:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::StackName}::PrivateSubnet1"
  PrivateSubnet2:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${AWS::StackName}::PrivateSubnet2"
